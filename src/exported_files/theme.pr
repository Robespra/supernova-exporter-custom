import 'package:flutter/material.dart';
import 'colors.dart';

class AppTheme {
  static ThemeData lightTheme() => ThemeData(
    brightness: Brightness.light,
    extensions: [
      AppColors(
        {[ let brand = ds.currentBrand() /]}
        {[ const colorTokensTree = ds.tokenGroupTreeByType("Color", brand.id) /]}
        {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
          {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
          {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
          {[ for colorToken in colorTokenInGroups ]}
            {[ if colorToken.name.startsWith("--") ]}
        {{ colorToken.name.substring(2, colorToken.name.length) }}: const {[ inject "export_color_value" context colorToken.value.light /]},
            {[/]}
          {[/]}
        {[/]}
      )
    ]
  );

  static ThemeData darkTheme() => ThemeData(
    brightness: Brightness.dark,
    extensions: [
      AppColors(
        {[ let brand = ds.currentBrand() /]}
        {[ const colorTokensTree = ds.tokenGroupTreeByType("Color", brand.id) /]}
        {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
          {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
          {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
          {[ for colorToken in colorTokenInGroups ]}
            {[ if colorToken.name.startsWith("--") ]}
        {{ colorToken.name.substring(2, colorToken.name.length) }}: const {[ inject "export_color_value" context colorToken.value.dark /]},
            {[/]}
          {[/]}
        {[/]}
      )
    ]
  );

  /// Get the current theme colors
  static AppColors colorsOf(BuildContext context) {
    return Theme.of(context).extension<AppColors>()!;
  }
}