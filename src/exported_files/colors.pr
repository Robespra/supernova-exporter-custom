import 'package:flutter/material.dart';

class AppColors extends ThemeExtension<AppColors> {
  {[ let brand = ds.currentBrand() /]}
  {[ const colorTokensTree = ds.tokenGroupTreeByType("Color", brand.id) /]}
  {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
    {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
    {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
    {[ for colorToken in colorTokenInGroups ]}
      {[ if colorToken.name.startsWith("--") ]}
        {[ const simpleName = colorToken.name.substring(2).camelcased(false) /]}
  final Color {{ simpleName }};
      {[/]}
    {[/]}
  {[/]}

  const AppColors({
    {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
      {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
      {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
      {[ for colorToken in colorTokenInGroups ]}
        {[ if colorToken.name.startsWith("--") ]}
          {[ const simpleName = colorToken.name.substring(2).camelcased(false) /]}
    required this.{{ simpleName }},
        {[/]}
      {[/]}
    {[/]}
  });

  @override
  AppColors copyWith({
    {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
      {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
      {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
      {[ for colorToken in colorTokenInGroups ]}
        {[ if colorToken.name.startsWith("--") ]}
          {[ const simpleName = colorToken.name.substring(2).camelcased(false) /]}
    Color? {{ simpleName }},
        {[/]}
      {[/]}
    {[/]}
  }) {
    return AppColors(
      {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
        {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
        {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
        {[ for colorToken in colorTokenInGroups ]}
          {[ if colorToken.name.startsWith("--") ]}
            {[ const simpleName = colorToken.name.substring(2).camelcased(false) /]}
      {{ simpleName }}: {{ simpleName }} ?? this.{{ simpleName }},
          {[/]}
        {[/]}
      {[/]}
    );
  }

  @override
  ThemeExtension<AppColors>? lerp(covariant AppColors? other, double t) {
    if (other is! AppColors) {
      return this;
    }
    return AppColors(
      {[ traverse colorTokensTree property subgroups into colorTokenGroup ]}
        {[ let fullTokenGroupPath = createFullTokenGroupPath(colorTokenGroup) /]}
        {[ const colorTokenInGroups = ds.tokensByGroupId(colorTokenGroup.id) /]}
        {[ for colorToken in colorTokenInGroups ]}
          {[ if colorToken.name.startsWith("--") ]}
            {[ const simpleName = colorToken.name.substring(2).camelcased(false) /]}
      {{ simpleName }}: Color.lerp({{ simpleName }}, other.{{ simpleName }}, t)!,
          {[/]}
        {[/]}
      {[/]}
    );
  }
}
